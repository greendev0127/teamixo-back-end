{"version":3,"file":"src/app.js","mappings":"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","sources":["webpack://ai-image-generator/./src/routes/admin/admin.route.js","webpack://ai-image-generator/./src/routes/admin/index.js","webpack://ai-image-generator/./src/routes/client/client.route.js","webpack://ai-image-generator/./src/routes/client/index.js","webpack://ai-image-generator/./src/routes/company/company.route.js","webpack://ai-image-generator/./src/routes/company/index.js","webpack://ai-image-generator/./src/routes/contact/contact.route.js","webpack://ai-image-generator/./src/routes/contact/index.js","webpack://ai-image-generator/./src/routes/db/db.route.js","webpack://ai-image-generator/./src/routes/db/index.js","webpack://ai-image-generator/./src/routes/document/document.route.js","webpack://ai-image-generator/./src/routes/document/index.js","webpack://ai-image-generator/./src/routes/index.js","webpack://ai-image-generator/./src/routes/profile/index.js","webpack://ai-image-generator/./src/routes/profile/profile.route.js","webpack://ai-image-generator/./src/routes/remote/index.js","webpack://ai-image-generator/./src/routes/remote/remote.route.js","webpack://ai-image-generator/./src/routes/report/index.js","webpack://ai-image-generator/./src/routes/report/report.route.js","webpack://ai-image-generator/./src/routes/role/index.js","webpack://ai-image-generator/./src/routes/role/role.route.js","webpack://ai-image-generator/./src/routes/setting/index.js","webpack://ai-image-generator/./src/routes/setting/setting.route.js","webpack://ai-image-generator/./src/routes/site/index.js","webpack://ai-image-generator/./src/routes/site/site.route.js","webpack://ai-image-generator/./src/routes/staff/index.js","webpack://ai-image-generator/./src/routes/staff/staff.route.js","webpack://ai-image-generator/./src/routes/user/index.js","webpack://ai-image-generator/./src/routes/user/user.route.js","webpack://ai-image-generator/./src/routes/v1/books.route.js","webpack://ai-image-generator/./src/routes/v1/index.js","webpack://ai-image-generator/external commonjs \"aws-sdk\"","webpack://ai-image-generator/external commonjs \"body-parser\"","webpack://ai-image-generator/external commonjs \"cors\"","webpack://ai-image-generator/external commonjs \"express\"","webpack://ai-image-generator/external commonjs \"moment\"","webpack://ai-image-generator/external commonjs \"serverless-http\"","webpack://ai-image-generator/external commonjs \"uuid\"","webpack://ai-image-generator/webpack/bootstrap","webpack://ai-image-generator/webpack/runtime/compat get default export","webpack://ai-image-generator/webpack/runtime/define property getters","webpack://ai-image-generator/webpack/runtime/hasOwnProperty shorthand","webpack://ai-image-generator/webpack/runtime/make namespace object","webpack://ai-image-generator/./src/app.js"],"sourcesContent":["import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\nconst uuid = require(\"uuid\");\n\nconst cognito = new AWS.CognitoIdentityServiceProvider();\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\nconst s3bucket = new AWS.S3();\n\nconst router = Router();\n\nrouter.get(\"/companies\", async (req, res) => {\n  try {\n    const companyParams = {\n      TableName: \"company_list\",\n    };\n\n    const companyData = await dynamoDb.scan(companyParams).promise();\n\n    const orgParams = {\n      TableName: \"organization\",\n    };\n\n    const orgData = await dynamoDb.scan(orgParams).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      data: {\n        companyData: companyData,\n        orgData: orgData,\n      },\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/deleteowner\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const orgParam = {\n      TableName: \"organization\",\n      Key: {\n        id: data.orgId,\n      },\n    };\n\n    await dynamoDb.delete(orgParam).promise();\n\n    const companyParam = {\n      TableName: \"company_list\",\n      Key: {\n        id: data.companyId,\n      },\n    };\n\n    await dynamoDb.delete(companyParam).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Owner data has been successfully deleted\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/deletesites\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"site_list\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.orgId, // Replace 'YourId' with the id you want to delete\n      },\n    };\n\n    const scanResults = [];\n    let items;\n\n    do {\n      items = await dynamoDb.scan(params).promise();\n      items.Items.forEach((item) => scanResults.push(item));\n      params.ExclusiveStartKey = items.LastEvaluatedKey;\n    } while (typeof items.LastEvaluatedKey !== \"undefined\");\n\n    for (const item of scanResults) {\n      const params = {\n        TableName: item.table_name,\n      };\n\n      await dynamoDb.deleteTable(params).promise();\n      const deleteParams = {\n        TableName: \"site_list\",\n        Key: {\n          id: item.id,\n        },\n      };\n      await dynamoDb.delete(deleteParams).promise();\n    }\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Sites data has been successfully deleted\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/deleterole\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"role_list\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.orgId, // Replace 'YourId' with the id you want to delete\n      },\n    };\n\n    const scanResults = [];\n    let items;\n\n    do {\n      items = await dynamoDb.scan(params).promise();\n      items.Items.forEach((item) => scanResults.push(item));\n      params.ExclusiveStartKey = items.LastEvaluatedKey;\n    } while (typeof items.LastEvaluatedKey !== \"undefined\");\n\n    for (const item of scanResults) {\n      const deleteParams = {\n        TableName: \"role_list\",\n        Key: {\n          id: item.id,\n        },\n      };\n      await dynamoDb.delete(deleteParams).promise();\n    }\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Role data has been successfully deleted\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/deletestaffs\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"staff_list\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.orgId, // Replace 'YourId' with the id you want to delete\n      },\n    };\n\n    const scanResults = [];\n    let items;\n\n    do {\n      items = await dynamoDb.scan(params).promise();\n      items.Items.forEach((item) => scanResults.push(item));\n      params.ExclusiveStartKey = items.LastEvaluatedKey;\n    } while (typeof items.LastEvaluatedKey !== \"undefined\");\n\n    for (const item of scanResults) {\n      const userParam = {\n        UserPoolId: process.env.USER_POOL_ID,\n        Username: item.email,\n      };\n\n      await cognito.adminDeleteUser(userParam).promise();\n\n      const deleteParams = {\n        TableName: \"staff_list\",\n        Key: {\n          id: item.id,\n        },\n      };\n      await dynamoDb.delete(deleteParams).promise();\n    }\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Role data has been successfully deleted\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/deletedocs\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"documents\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.orgId, // Replace 'YourId' with the id you want to delete\n      },\n    };\n\n    const scanResults = [];\n    let items;\n\n    do {\n      items = await dynamoDb.scan(params).promise();\n      items.Items.forEach((item) => scanResults.push(item));\n      params.ExclusiveStartKey = items.LastEvaluatedKey;\n    } while (typeof items.LastEvaluatedKey !== \"undefined\");\n\n    for (const item of scanResults) {\n      const urlParts = new URL(item.docFile).pathname.split(\"/\");\n      const key = urlParts.slice(1).join(\"/\").replaceAll(\"%20\", \" \");\n\n      const params = {\n        Bucket: process.env.S3_BUCKET_NAME, // replace with your bucket name\n        Key: key, // replace with the image key\n      };\n\n      await s3bucket.deleteObject(params).promise();\n\n      const deleteParams = {\n        TableName: \"documents\",\n        Key: {\n          id: item.id,\n        },\n      };\n      await dynamoDb.delete(deleteParams).promise();\n    }\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Role data has been successfully deleted\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\nimport admin from \"./admin.route\";\n\nconst router = Router();\n\nrouter.use(\"/\", admin);\n\nexport default router;\n","import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\nimport moment from \"moment\"\nconst uuid = require(\"uuid\");\n\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\nconst router = Router();\n\nfunction roundToNearestFiveMinutes(date, round) {\n  const ms = 1000 * 60 * round; // convert 5 minutes to milliseconds\n  const roundedDate = new Date(Math.round(date / ms) * ms);\n  return roundedDate.getTime();\n}\n\nrouter.post(\"/getsite\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request!\" });\n    }\n\n    const params = {\n      TableName: \"site_list\",\n      Key: {\n        id: data.id,\n      },\n    };\n\n    const site = await dynamoDb.get(params).promise();\n\n    const companyParams = {\n      TableName: \"company_list\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": site.Item.organization_id,\n      },\n    };\n\n    const company = await dynamoDb.scan(companyParams).promise();\n\n    const response = {\n      statusCode: 200,\n      body: {\n        site: site,\n        company: company,\n      },\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/stafflist\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request!\" });\n    }\n\n    const params = {\n      TableName: \"staff_list\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.organization_id,\n      },\n    };\n    const result = await dynamoDb.scan(params).promise();\n    const response = {\n      statusCode: 200,\n      body: result.Items,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/trigger\", async (req, res) => {\n  try {\n\t\tconst timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request!\" });\n    }\n\n    const params = {\n      TableName: \"organization\",\n      Key: {\n        id: data.id,\n      },\n    };\n\n    const result = await dynamoDb.get(params).promise();\n\n    if (result.Item.update_state) {\n      const siteParams = {\n        TableName: \"organization\",\n        Key: {\n          id: data.id,\n        },\n        ExpressionAttributeNames: {\n          \"#update_state\": \"update_state\",\n        },\n        ExpressionAttributeValues: {\n          \":update_state\": false,\n          \":updateAt\": timeStamp,\n        },\n        UpdateExpression:\n          \"SET #update_state = :update_state, updateAt = :updateAt\",\n        ReturnValues: \"ALL_NEW\",\n      };\n\n      await dynamoDb.update(siteParams).promise();\n    }\n\n    const response = {\n      statusCode: 200,\n      body: result,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/start\", async (req, res) => {\n  try {\n\t\tconst timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request!\" });\n    }\n\n    const uid = uuid.v1();\n\n    const dateParams = {\n      TableName: data.tableName,\n      Item: {\n        id: uid,\n        staff_id: data.staff.id,\n        start_date: roundToNearestFiveMinutes(timeStamp, data.round),\n        date: moment(timeStamp).format(\"YYYY-MM-DD\"),\n        end_date: null,\n        total_time: null,\n        name: data.staff.name,\n        createdAt: timeStamp,\n        updateAt: timeStamp,\n      },\n    };\n\n    await dynamoDb.put(dateParams).promise();\n    const params = {\n      TableName: \"staff_list\",\n      Key: {\n        id: data.staff.id,\n      },\n      ExpressionAttributeNames: {\n        \"#clocked_state\": \"clocked_state\",\n        \"#track_id\": \"track_id\",\n        \"#site_id\": \"site_id\",\n        \"#last_start_date\": \"last_start_date\",\n      },\n      ExpressionAttributeValues: {\n        \":clocked_state\": true,\n        \":track_id\": uid,\n        \":site_id\": data.tableName,\n        \":last_start_date\": roundToNearestFiveMinutes(timeStamp, data.round),\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression:\n        \"SET #clocked_state = :clocked_state, #track_id = :track_id, #site_id = :site_id, #last_start_date = :last_start_date, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    const result = await dynamoDb.update(params).promise();\n\n    const response = {\n      stsatusCode: 200,\n      body: result.Attributes,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/end\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request!\" });\n    }\n\n    var differenceInMs =\n      roundToNearestFiveMinutes(timeStamp, data.round) -\n      data.staff.last_start_date;\n\n    var total_time = differenceInMs;\n\n    const dateParam = {\n      TableName: data.tableName,\n      Key: {\n        id: data.staff.track_id,\n      },\n      ExpressionAttributeNames: {\n        \"#end_date\": \"end_date\",\n        \"#total_time\": \"total_time\",\n      },\n      ExpressionAttributeValues: {\n        \":end_date\": roundToNearestFiveMinutes(timeStamp, data.round),\n        \":total_time\": total_time,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression:\n        \"SET #end_date = :end_date, #total_time = :total_time, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(dateParam).promise();\n\n    const params = {\n      TableName: \"staff_list\",\n      Key: {\n        id: data.staff.id,\n      },\n      ExpressionAttributeNames: {\n        \"#clocked_state\": \"clocked_state\",\n      },\n      ExpressionAttributeValues: {\n        \":clocked_state\": false,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression:\n        \"SET #clocked_state = :clocked_state, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    const result = await dynamoDb.update(params).promise();\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/check\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request!\" });\n    }\n\n    const params = {\n      TableName: \"staff_list\",\n      Key: {\n        id: data.id,\n      },\n    };\n\n    const result = await dynamoDb.get(params).promise();\n\n    const response = {\n      statusCode: 200,\n      body: result,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/addstaff\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request!\" });\n    }\n\n    const uid = uuid.v1();\n    const staff_id = uuid.v1();\n\n    const dateParams = {\n      TableName: data.tableName,\n      Item: {\n        id: uid,\n        staff_id: staff_id,\n        start_date: roundToNearestFiveMinutes(timeStamp, data.round),\n        date: moment(timeStamp).format(\"YYYY-MM-DD\"),\n        end_date: null,\n        total_time: null,\n        name: data.name,\n        createdAt: timeStamp,\n        updateAt: timeStamp,\n      },\n    };\n\n    await dynamoDb.put(dateParams).promise();\n\n    let Item = {\n      id: staff_id,\n      organization_id: data.organization_id,\n      name: data.name,\n      email: data.email,\n      avatar: process.env.DEFAULT_AVATAR,\n      site_id: data.tableName,\n      track_id: uid,\n      type: 1,\n      level: 3,\n      clocked_state: true,\n      last_start_date: roundToNearestFiveMinutes(timeStamp, data.round),\n      state: false,\n      createAt: timeStamp,\n      updateAt: timeStamp,\n    };\n\n    const params = {\n      TableName: \"staff_list\",\n      Item,\n    };\n\n    await dynamoDb.put(params).promise();\n\n    const response = {\n      stsatusCode: 200,\n      message: \"success\",\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import {Router} from \"express\"\nimport client from \"./client.route\"\n\nconst router = Router()\n\nrouter.use(\"/\", client)\n\nexport default router\n","import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\nconst uuid = require(\"uuid\");\n\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\nconst s3bucket = new AWS.S3();\n\nconst router = Router();\n\nrouter.post(\"/create\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    let Item = {\n      id: uuid.v1(),\n      organization_id: data.organizationId,\n      name: data.name,\n      description: data.description,\n      logo: \"https://teamixo-app-development.s3.eu-west-2.amazonaws.com/Home/Logos/default/company.png\",\n      date_format: \"YYYY-MM-DD\",\n      timeZone: \"Etc/GMT\",\n      type: 1,\n      round: 5,\n      createAt: timeStamp,\n      updateAt: timeStamp,\n    };\n\n    const params = {\n      TableName: \"company_list\",\n      Item,\n    };\n\n    await dynamoDb.put(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"success create\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/fetch\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"company_list\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.organization_id,\n      },\n    };\n\n    const result = await dynamoDb.scan(params).promise();\n\n    const response = {\n      statusCode: 200,\n      body: result,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/update\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    let location = \"\";\n\n    if (data.logo) {\n      var buf = Buffer.from(\n        data.logo.replace(/^data:image\\/\\w+;base64,/, \"\"),\n        \"base64\"\n      );\n      const type = data.logo.split(\";\")[0].split(\"/\")[1];\n      const params = {\n        Bucket: process.env.S3_BUCKET_NAME,\n        Key: `Home/Logos/${data.name}/${data.name}_${timeStamp}.${type}`,\n        Body: buf,\n        ACL: \"public-read\",\n        ContentEncoding: \"base64\",\n        ContentType: `image/${type}`,\n      };\n      try {\n        const uploadData = await s3bucket.upload(params).promise();\n        location = uploadData.Location;\n      } catch (error) {\n        console.log(error);\n        return res.status(200).json({ statusCode: 500, error });\n      }\n    }\n\n    const params = data.logo\n      ? {\n          TableName: \"company_list\",\n          Key: {\n            id: data.id,\n          },\n          ExpressionAttributeNames: {\n            \"#name_text\": \"name\",\n            \"#rdname\": \"rdname\",\n            \"#logo\": \"logo\",\n            \"#date_format\": \"date_format\",\n            \"#timeZone\": \"timeZone\",\n            \"#type\": \"type\",\n            \"#round\": \"round\",\n          },\n          ExpressionAttributeValues: {\n            \":name\": data.name,\n            \":rdname\": data.rdname,\n            \":logo\": location,\n            \":date_format\": data.dateFormat,\n            \":timeZone\": data.timeZone,\n            \":type\": data.type,\n            \":round\": data.round,\n            \":updateAt\": timeStamp,\n          },\n          UpdateExpression:\n            \"SET #name_text = :name, #rdname = :rdname, #logo = :logo, #date_format = :date_format, #timeZone = :timeZone, #type = :type, #round = :round, updateAt = :updateAt\",\n          ReturnValues: \"ALL_NEW\",\n        }\n      : {\n          TableName: \"company_list\",\n          Key: {\n            id: data.id,\n          },\n          ExpressionAttributeNames: {\n            \"#name_text\": \"name\",\n            \"#rdname\": \"rdname\",\n            \"#date_format\": \"date_format\",\n            \"#timeZone\": \"timeZone\",\n            \"#type\": \"type\",\n            \"#round\": \"round\",\n          },\n          ExpressionAttributeValues: {\n            \":name\": data.name,\n            \":rdname\": data.rdname,\n            \":date_format\": data.dateFormat,\n            \":timeZone\": data.timeZone,\n            \":type\": data.type,\n            \":round\": data.round,\n            \":updateAt\": timeStamp,\n          },\n          UpdateExpression:\n            \"SET #name_text = :name, #rdname = :rdname, #date_format = :date_format, #timeZone = :timeZone, #type = :type, #round = :round, updateAt = :updateAt\",\n          ReturnValues: \"ALL_NEW\",\n        };\n\n    const result = await dynamoDb.update(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Company data has been successfully updated\",\n      data: location,\n      response: result,\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/state\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const organizationParams = {\n      TableName: \"organization\",\n      Key: {\n        id: data.organization_id,\n      },\n      ExpressionAttributeNames: {\n        \"#update_state\": \"update_state\",\n      },\n      ExpressionAttributeValues: {\n        \":update_state\": true,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression:\n        \"SET #update_state = :update_state, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(organizationParams).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"success create\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/getcompany\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const companyParams = {\n      TableName: \"company_list\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.organization_id,\n      },\n    };\n\n    const company = await dynamoDb.scan(companyParams).promise();\n\n    const response = {\n      statusCode: 200,\n      body: company,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\nimport company from \"./company.route\";\n\nconst router = Router();\n\nrouter.use(\"/\", company);\n\nexport default router;\n","import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\nconst uuid = require(\"uuid\");\n\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\nconst router = Router();\n\nrouter.post(\"/addticket\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const TableName = \"support\";\n\n    let Item = data;\n    Item.id = uuid.v1();\n    Item.createAt = timeStamp;\n    Item.updateAt = timeStamp;\n\n    const params = {\n      TableName: TableName,\n      Item,\n    };\n\n    const response = await dynamoDb.put(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"success create\",\n      data: response,\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/getticket\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"support\",\n      Key: {\n        id: data.id,\n      },\n    };\n\n    const res = await dynamoDb.get(params).promise();\n\n    const response = {\n      statusCode: 200,\n      body: res,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/solveticket\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"support\",\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#solved\": \"solved\",\n      },\n      ExpressionAttributeValues: {\n        \":solved\": true,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression: \"SET #solved = :solved, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(params).promise();\n\n    const message = \"#\" + data.id + \" ticket is closed\";\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: message,\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/updateticket\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"support\",\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#messages\": \"messages\",\n      },\n      ExpressionAttributeValues: {\n        \":messages\": data.messages,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression: \"SET #messages = :messages, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(params).promise();\n\n    const message = \"#\" + data.id + \" ticket is closed.\";\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: message,\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/fetchticket\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"support\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.organization_id,\n      },\n    };\n    const result = await dynamoDb.scan(params).promise();\n    const response = {\n      statusCode: 200,\n      body: result.Items,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\nimport contact from \"./contact.route\";\n\nconst router = Router();\n\nrouter.use(\"/\", contact);\n\nexport default router;\n","import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\n\nvar ddb = new AWS.DynamoDB({ apiVersion: \"2012-08-10\" });\n\nconst router = Router();\n\nrouter.post(\"/createtable\", async (req, res) => {\n  try {\n    const data = req.body;\n\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: data.tableName,\n      KeySchema: [{ AttributeName: \"id\", KeyType: \"HASH\" }],\n      AttributeDefinitions: [{ AttributeName: \"id\", AttributeType: \"S\" }],\n      BillingMode: \"PAY_PER_REQUEST\",\n    };\n\n    await ddb.createTable(params).promise();\n\n    res.status(200).json({ message: \"Create table successful\" });\n  } catch (error) {\n    console.error(\"An error ocurred:\", error);\n    res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/deletetable\", async (req, res) => {\n  try {\n    const data = req.body;\n\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: data.tableName,\n    };\n\n    await ddb.deleteTable(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Delete table successful\",\n    });\n  } catch (error) {\n    console.error(\"An error ocurred:\", error);\n    res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\n\nimport db from \"./db.route\";\n\nconst router = Router();\n\nrouter.use(\"/\", db);\n\nexport default router;\n","import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\nimport moment from \"moment\";\nconst uuid = require(\"uuid\");\n\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\nconst s3bucket = new AWS.S3();\n\nconst router = Router();\n\nrouter.post(\"/upload\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n    const file = data.file;\n    const base64Data = file.replace(/^data:application\\/pdf;base64,/, \"\");\n    const decodedFile = Buffer.from(base64Data, \"base64\");\n    const params = {\n      Bucket: process.env.S3_BUCKET_NAME,\n      Key: `Home/Document/${data.organizationId}/${moment(timeStamp).format(\n        \"YYYY-MM-DD\"\n      )}/${data.docName}_${timeStamp}.pdf`,\n      Body: decodedFile,\n      ACL: \"public-read\",\n      ContentEncoding: \"base64\",\n      ContentType: `application/pdf`,\n    };\n    let location = \"\";\n    try {\n      const uploadData = await s3bucket.upload(params).promise();\n      location = uploadData.Location;\n    } catch (error) {\n      console.log(error);\n      return res.status(200).json({ statusCode: 500, error });\n    }\n    return res.status(200).json({ statusCode: 200, data: location });\n  } catch (error) {\n    res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/add\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    let Item = data;\n    Item.id = uuid.v1();\n    Item.createAt = timeStamp;\n    Item.updateAt = timeStamp;\n\n    const params = {\n      TableName: \"documents\",\n      Item,\n    };\n\n    await dynamoDb.put(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Document has been successfully created\",\n    });\n  } catch (error) {\n    res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/update\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"documents\",\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#docName\": \"docName\",\n        \"#docType\": \"docType\",\n        \"#docDate\": \"docDate\",\n        \"#expireDate\": \"expireDate\",\n        \"#assignType\": \"assignType\",\n        \"#assignValue\": \"assignValue\",\n      },\n      ExpressionAttributeValues: {\n        \":docName\": data.docName,\n        \":docType\": data.docType,\n        \":docDate\": data.docDate,\n        \":expireDate\": data.expireDate,\n        \":assignType\": data.assignType,\n        \":assignValue\": data.assignValue,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression:\n        \"SET #docName = :docName, #docType = :docType, #docDate = :docDate, #expireDate = :expireDate, #assignType = :assignType, #assignValue = :assignValue, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Site data has been successfully updated\",\n    });\n  } catch (error) {\n    res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/delete\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      Bucket: process.env.S3_BUCKET_NAME, // replace with your bucket name\n      Key: data.key, // replace with the image key\n    };\n\n    await s3bucket.deleteObject(params).promise();\n\n    const documentParams = {\n      TableName: \"documents\",\n      Key: {\n        id: data.id,\n      },\n    };\n\n    await dynamoDb.delete(documentParams).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"delete successful\",\n    });\n  } catch (error) {\n    res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/fetch\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n    const params = {\n      TableName: \"documents\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.organization_id,\n      },\n    };\n    const result = await dynamoDb.scan(params).promise();\n    const response = {\n      statusCode: 200,\n      body: result.Items,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/staff\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"documents\",\n      FilterExpression:\n        \"#organization_id = :organization_id AND #assignType < :assignType\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n        \"#assignType\": \"assignType\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.organization_id,\n        \":assignType\": 5,\n      },\n    };\n\n    const result = await dynamoDb.scan(params).promise();\n    const resultDocList = result.Items.filter((item) => {\n      return (\n        item.assignType === 1 ||\n        (item.assignType === 2 && item.assignValue === data.type) ||\n        (item.assignType === 3 && data.role.includes(item.assignValue)) ||\n        data.userId === item.assignValue\n      );\n    });\n    return res.status(200).json({\n      statusCode: 200,\n      body: resultDocList,\n    });\n  } catch (error) {\n    res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/site\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"documents\",\n      FilterExpression:\n        \"#organization_id = :organization_id AND #assignType > :assignType\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n        \"#assignType\": \"assignType\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.organization_id,\n        \":assignType\": 4,\n      },\n    };\n\n    const result = await dynamoDb.scan(params).promise();\n    const resultDocList = result.Items.filter((item) => {\n      return item.assignType === 5 || data.sietId === item.assignValue;\n    });\n    return res.status(200).json({\n      statusCode: 200,\n      body: resultDocList,\n    });\n  } catch (error) {\n    res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\nimport document from \"./document.route\";\n\nconst router = Router();\n\nrouter.use(\"/\", document);\n\nexport default router;\n","import { Router } from \"express\";\n\nimport v1 from \"./v1\";\nimport db from \"./db\";\nimport user from \"./user\";\nimport staff from \"./staff\";\nimport site from \"./site\";\nimport setting from \"./setting\";\nimport role from \"./role\";\nimport report from \"./report\";\nimport remote from \"./remote\";\nimport profile from \"./profile\";\nimport document from \"./document\";\nimport contact from \"./contact\";\nimport company from \"./company\";\nimport client from \"./client\";\nimport admin from \"./admin\";\n\nconst router = Router();\n\nrouter.use(\"/v1\", v1);\nrouter.use(\"/db\", db);\nrouter.use(\"/user\", user);\nrouter.use(\"/staff\", staff);\nrouter.use(\"/site\", site);\nrouter.use(\"/setting\", setting);\nrouter.use(\"/role\", role);\nrouter.use(\"/report\", report);\nrouter.use(\"/remote\", remote);\nrouter.use(\"/profile\", profile);\nrouter.use(\"/document\", document);\nrouter.use(\"/support\", contact);\nrouter.use(\"/company\", company);\nrouter.use(\"/client\", client);\nrouter.use(\"/admin\", admin);\n\nexport default router;\n","import { Router } from \"express\";\nimport profile from \"./profile.route\";\n\nconst router = Router();\n\nrouter.use(\"/\", profile);\n\nexport default router;\n","import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\nconst uuid = require(\"uuid\");\n\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\nconst s3bucket = new AWS.S3();\n\nconst router = Router();\n\nrouter.post(\"/fetch\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"staff_list\",\n      Key: {\n        id: data.id,\n      },\n    };\n\n    const user = await dynamoDb.get(params).promise();\n\n    const response = {\n      statusCode: 200,\n      body: {\n        user: user,\n      },\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/update\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"staff_list\",\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#name_text\": \"name\",\n        \"#gender\": \"gender\",\n        \"#birth\": \"birth\",\n      },\n      ExpressionAttributeValues: {\n        \":name\": data.name,\n        \":gender\": data.gender,\n        \":birth\": data.birth,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression:\n        \"SET #name_text = :name, #gender = :gender, #birth = :birth, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Profile data has been successfully updated\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/updateavatar\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    let location = \"\";\n\n    var buf = Buffer.from(\n      data.avatar.replace(/^data:image\\/\\w+;base64,/, \"\"),\n      \"base64\"\n    );\n    const type = data.avatar.split(\";\")[0].split(\"/\")[1];\n    const s3params = {\n      Bucket: process.env.S3_BUCKET_NAME,\n      Key: `Home/Avatars/${data.organization_id}/avatar${timeStamp}.${type}`,\n      Body: buf,\n      ACL: \"public-read\",\n      ContentEncoding: \"base64\",\n      ContentType: `image/${type}`,\n    };\n    try {\n      const uploadData = await s3bucket.upload(s3params).promise();\n      location = uploadData.Location;\n    } catch (error) {\n      console.log(error);\n      return utils.responseData(200, { statusCode: 500, error });\n    }\n\n    const params = {\n      TableName: \"staff_list\",\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#avatar\": \"avatar\",\n      },\n      ExpressionAttributeValues: {\n        \":avatar\": location,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression: \"SET #avatar = :avatar, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      avatar: location,\n      message: \"Profile Avatar has been successfully updated\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/changepin\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const staffParams = {\n      TableName: \"staff_list\",\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#pin\": \"pin\",\n      },\n      ExpressionAttributeValues: {\n        \":pin\": data.pin,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression: \"SET #pin = :pin, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n    await dynamoDb.update(staffParams).promise();\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Pin has been successfully updated\",\n      response,\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/gethistory\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const staffParams = {\n      TableName: data.tableName,\n      FilterExpression: \"#staff_id = :staff_id\",\n      ExpressionAttributeNames: {\n        \"#staff_id\": \"staff_id\",\n      },\n      ExpressionAttributeValues: {\n        \":staff_id\": data.userId,\n      },\n    };\n\n    const staffHistoryList = await dynamoDb.scan(staffParams).promise();\n    return res.status(200).json({ statusCode: 200, data: staffHistoryList });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\nimport remote from \"./remote.route\";\n\nconst router = Router();\n\nrouter.use(\"/\", remote);\n\nexport default router;\n","import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\n\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\nconst router = Router();\n\nrouter.post(\"/sites\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"site_list\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.organization_id,\n      },\n    };\n    const result = await dynamoDb.scan(params).promise();\n    const response = {\n      statusCode: 200,\n      body: result.Items,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\nimport report from \"./report.route\";\n\nconst router = Router();\n\nrouter.use(\"/\", report);\n\nexport default router;\n","import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\nconst uuid = require(\"uuid\");\n\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\nconst s3bucket = new AWS.S3();\n\nconst router = Router();\n\nrouter.post(\"/fetch\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: data.tableName,\n    };\n    const result = await dynamoDb.scan(params).promise();\n    const response = {\n      statusCode: 200,\n      body: result.Items,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/scandate\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: data.tableName,\n      FilterExpression: \"#date between :start_date and :end_date\",\n      ExpressionAttributeNames: {\n        \"#date\": \"date\",\n      },\n      ExpressionAttributeValues: {\n        \":start_date\": data.start_date,\n        \":end_date\": data.end_date,\n      },\n    };\n\n    const result = await dynamoDb.scan(params).promise();\n\n    const response = {\n      statusCode: 200,\n      body: result,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/addtrack\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const TableName = data.tableName;\n    let site_id = data.site_id;\n    let last_start_date = data.last_start_date;\n    let track_id = data.track_id;\n    const clocked_state = data.state;\n\n    let Item = data;\n    Item.id = uuid.v1();\n    Item.createdAt = timeStamp;\n    Item.updateAt = timeStamp;\n    Item.edit_state = true;\n    delete Item.tableName;\n    delete Item.siteId;\n    delete Item.track_id;\n    delete Item.last_start_date;\n    delete Item.state;\n    delete Item.site_id;\n\n    const params = {\n      TableName: TableName,\n      Item,\n    };\n\n    await dynamoDb.put(params).promise();\n\n    var state = clocked_state;\n    if (Item.end_date === null) {\n      track_id = Item.id;\n      last_start_date = data.start_date;\n      state = true;\n      site_id = TableName;\n    }\n\n    const staffParams = {\n      TableName: \"staff_list\",\n      Key: {\n        id: data.staff_id,\n      },\n      ExpressionAttributeNames: {\n        \"#clocked_state\": \"clocked_state\",\n        \"#track_id\": \"track_id\",\n        \"#site_id\": \"site_id\",\n        \"#last_start_date\": \"last_start_date\",\n      },\n      ExpressionAttributeValues: {\n        \":clocked_state\": state,\n        \":track_id\": track_id,\n        \":site_id\": site_id,\n        \":last_start_date\": last_start_date,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression:\n        \"SET #track_id = :track_id, #last_start_date = :last_start_date, #clocked_state = :clocked_state, #site_id = :site_id, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(staffParams).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: `${Item.name} track data has been successfully created`,\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/updatetrack\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const dateParam = {\n      TableName: data.tableName,\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#name\": \"name\",\n        \"#staff_id\": \"staff_id\",\n        \"#date\": \"date\",\n        \"#start_date\": \"start_date\",\n        \"#end_date\": \"end_date\",\n        \"#total_time\": \"total_time\",\n      },\n      ExpressionAttributeValues: {\n        \":name\": data.name,\n        \":staff_id\": data.staff_id,\n        \":date\": data.date,\n        \":start_date\": data.start_date,\n        \":end_date\": data.end_date,\n        \":total_time\": data.total_time,\n        \":edit_state\": true,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression:\n        \"SET #name = :name, #staff_id = :staff_id, #date = :date, #start_date = :start_date, #end_date = :end_date, #total_time = :total_time, edit_state = :edit_state, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(dateParam).promise();\n\n    if (data.state) {\n      if (!data.subState) {\n        const oldParams = {\n          TableName: \"staff_list\",\n          Key: {\n            id: data.old_staff_id,\n          },\n          ExpressionAttributeNames: {\n            \"#clocked_state\": \"clocked_state\",\n          },\n          ExpressionAttributeValues: {\n            \":clocked_state\": false,\n          },\n          UpdateExpression: \"SET #clocked_state = :clocked_state\",\n          ReturnValues: \"ALL_NEW\",\n        };\n\n        await dynamoDb.update(oldParams).promise();\n\n        const params = {\n          TableName: \"staff_list\",\n          Key: {\n            id: data.staff_id,\n          },\n          ExpressionAttributeNames: {\n            \"#clocked_state\": \"clocked_state\",\n            \"#last_start_date\": \"last_start_date\",\n            \"#track_id\": \"track_id\",\n            \"#site_id\": \"site_id\",\n          },\n          ExpressionAttributeValues: {\n            \":clocked_state\": data.clocked_state,\n            \":last_start_date\": data.start_date,\n            \":track_id\": data.id,\n            \":updateAt\": timeStamp,\n            \":site_id\": data.tableName,\n          },\n          UpdateExpression:\n            \"SET #last_start_date = :last_start_date, #clocked_state = :clocked_state, #track_id = :track_id, #site_id = :site_id, updateAt = :updateAt\",\n          ReturnValues: \"ALL_NEW\",\n        };\n\n        await dynamoDb.update(params).promise();\n      } else {\n        if (data.clocked_state) {\n          const params = {\n            TableName: \"staff_list\",\n            Key: {\n              id: data.staff_id,\n            },\n            ExpressionAttributeNames: {\n              \"#clocked_state\": \"clocked_state\",\n              \"#last_start_date\": \"last_start_date\",\n              \"#track_id\": \"track_id\",\n              \"#site_id\": \"site_id\",\n            },\n            ExpressionAttributeValues: {\n              \":clocked_state\": data.clocked_state,\n              \":last_start_date\": data.start_date,\n              \":track_id\": data.id,\n              \":updateAt\": timeStamp,\n              \":site_id\": data.tableName,\n            },\n            UpdateExpression:\n              \"SET #last_start_date = :last_start_date, #clocked_state = :clocked_state, #track_id = :track_id, #site_id = :site_id, updateAt = :updateAt\",\n            ReturnValues: \"ALL_NEW\",\n          };\n\n          await dynamoDb.update(params).promise();\n        } else {\n          const oldParams = {\n            TableName: \"staff_list\",\n            Key: {\n              id: data.old_staff_id,\n            },\n            ExpressionAttributeNames: {\n              \"#clocked_state\": \"clocked_state\",\n            },\n            ExpressionAttributeValues: {\n              \":clocked_state\": false,\n            },\n            UpdateExpression: \"SET #clocked_state = :clocked_state\",\n            ReturnValues: \"ALL_NEW\",\n          };\n\n          await dynamoDb.update(oldParams).promise();\n        }\n      }\n    }\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: `${data.name} track data has been successfully updated`,\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/deletetrack\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: data.tableName,\n      Key: {\n        id: data.id,\n      },\n    };\n\n    await dynamoDb.delete(params).promise();\n\n    if (data.state) {\n      const staffParams = {\n        TableName: \"staff_list\",\n        Key: {\n          id: data.staff_id,\n        },\n        ExpressionAttributeNames: {\n          \"#clocked_state\": \"clocked_state\",\n        },\n        ExpressionAttributeValues: {\n          \":clocked_state\": false,\n          \":updateAt\": timeStamp,\n        },\n        UpdateExpression:\n          \"SET #clocked_state = :clocked_state, updateAt = :updateAt\",\n        ReturnValues: \"ALL_NEW\",\n      };\n\n      await dynamoDb.update(staffParams).promise();\n    }\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Track data has been successfully deleted\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/getimage\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      Bucket: process.env.S3_BUCKET_NAME, // replace with your bucket name\n      Key: data.key, // replace with the image key\n    };\n\n    try {\n      const data = await s3bucket.getObject(params).promise();\n      var base64Data = data.Body.toString(\"base64\");\n    } catch (error) {\n      console.log(error);\n      return res.status(200).json({ statusCode: 500, error });\n    }\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Company Logo\",\n      data: base64Data,\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\n\nimport role from \"./role.route\";\n\nconst router = Router();\n\nrouter.use(\"/\", role);\n\nexport default router;\n","import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\nconst uuid = require(\"uuid\");\n\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\nconst router = Router();\n\nrouter.post(\"/create\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    let Item = {\n      id: uuid.v1(),\n      organization_id: data.organization_id,\n      role: data.role,\n      createAt: timeStamp,\n      updateAt: timeStamp,\n    };\n\n    const params = {\n      TableName: \"role_list\",\n      Item,\n    };\n\n    await dynamoDb.put(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Role has been successfully created\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/fetch\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"role_list\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.organization_id,\n      },\n    };\n    const result = await dynamoDb.scan(params).promise();\n    const response = {\n      statusCode: 200,\n      body: result.Items,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/update\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"role_list\",\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#role_text\": \"role\",\n      },\n      ExpressionAttributeValues: {\n        \":role\": data.role,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression: \"SET #role_text = :role, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Role has been successfully updated\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/delete\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"role_list\",\n      Key: {\n        id: data.id,\n      },\n    };\n\n    await dynamoDb.delete(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Role has been successfully deleted\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/staffrole\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"staff_list\",\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#role_text\": \"role\",\n      },\n      ExpressionAttributeValues: {\n        \":role\": data.role,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression: \"SET #role_text = :role, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Update Successful\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\n\nimport setting from \"./setting.route\";\n\nconst router = Router();\n\nrouter.use(\"/\", setting);\n\nexport default router;\n","import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\n\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\nconst router = Router();\n\nrouter.post(\"/reportsetting\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request!\" });\n    }\n\n    const params = {\n      TableName: \"company_list\",\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#site_report\": \"site_report\",\n        \"#staff_report\": \"staff_report\",\n        \"#show_day\": \"show_day\",\n      },\n      ExpressionAttributeValues: {\n        \":site_report\": data.site_report,\n        \":staff_report\": data.staff_report,\n        \":show_day\": data.showDay,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression:\n        \"SET #site_report = :site_report, #staff_report = :staff_report, #show_day = :show_day, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Report option data has been successfully updated\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\n\nimport site from \"./site.route\";\n\nconst router = Router();\n\nrouter.use(\"/\", site);\n\nexport default router;\n","import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\nconst uuid = require(\"uuid\");\n\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\nconst router = Router();\n\nrouter.post(\"/create\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    let Item = data;\n    Item.id = uuid.v1();\n    Item.createAt = timeStamp;\n    Item.updateAt = timeStamp;\n\n    const params = {\n      TableName: \"site_list\",\n      Item,\n    };\n\n    await dynamoDb.put(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Site data has been successfully created\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/fetch\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"site_list\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.organization_id,\n      },\n    };\n    const result = await dynamoDb.scan(params).promise();\n    const response = {\n      statusCode: 200,\n      body: result.Items,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/update\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"site_list\",\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#name_text\": \"name\",\n        \"#description_text\": \"description\",\n        \"#round\": \"round\",\n        \"#remote\": \"remote\",\n      },\n      ExpressionAttributeValues: {\n        \":name\": data.name,\n        \":description\": data.description,\n        \":round\": data.round,\n        \":remote\": data.remote,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression:\n        \"SET #name_text = :name, #description_text = :description, #round = :round, #remote = :remote, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Site data has been successfully updated\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/location\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"site_list\",\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#lat\": \"lat\",\n        \"#lng\": \"lng\",\n      },\n      ExpressionAttributeValues: {\n        \":lat\": data.lat,\n        \":lng\": data.lng,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression: \"SET #lat = :lat, #lng = :lng, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Location data has been successfully updated\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/delete\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"site_list\",\n      Key: {\n        id: data.id,\n      },\n    };\n\n    await dynamoDb.delete(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Site data had been successfully deleted\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\n\nimport staff from \"./staff.route\";\n\nconst router = Router();\n\nrouter.use(\"/\", staff);\n\nexport default router;\n","import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\nconst uuid = require(\"uuid\");\n\nconst cognito = new AWS.CognitoIdentityServiceProvider();\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\nconst s3bucket = new AWS.S3();\nvar ses = new AWS.SES();\n\nconst router = Router();\n\nrouter.post(\"/create\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n    const pin = Math.floor(1000 + Math.random() * 9000);\n    var result = \"\";\n    var characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < 10; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    let Item = {\n      id: uuid.v1(),\n      organization_id: data.organization_id,\n      email: data.email,\n      name: data.name,\n      avatar: process.env.DEFAULT_AVATAR,\n      pin: pin,\n      role: data.role,\n      level: data.level,\n      type: data.type,\n      site_id: null,\n      track_id: null,\n      clocked_state: false,\n      state: true,\n      last_start_date: null,\n      createAt: timeStamp,\n      updateAt: timeStamp,\n    };\n\n    const params = {\n      UserPoolId: process.env.USER_POOL_ID, // replace with your User Pool ID\n      Username: data.email, // replace with the username\n      TemporaryPassword: result, // replace with a temporary password\n      UserAttributes: [\n        {\n          Name: \"email\",\n          Value: data.email, // replace with the user's email\n        },\n        {\n          Name: \"email_verified\",\n          Value: \"true\",\n        },\n        {\n          Name: \"custom:role\",\n          Value: data.level == 2 ? \"admin\" : \"member\",\n        },\n        {\n          Name: \"custom:user_id\",\n          Value: Item.id,\n        },\n        {\n          Name: \"custom:level\",\n          Value: data.level.toString(),\n        },\n        {\n          Name: \"custom:organization_id\",\n          Value: data.organization_id,\n        },\n      ],\n      MessageAction: \"SUPPRESS\", // suppresses the welcome message\n    };\n    await cognito.adminCreateUser(params).promise();\n\n    const staffParams = {\n      TableName: \"staff_list\",\n      Item,\n    };\n\n    await dynamoDb.put(staffParams).promise();\n\n    const inviteLink = \"https://teamixo-server.vercel.app/invite/\" + Item.id;\n\n    var emailParams = {\n      Destination: {\n        ToAddresses: [data.email], // replace recipient@example.com with the recipient's email address\n      },\n      Message: {\n        Body: {\n          Html: {\n            Charset: \"UTF-8\",\n            Data: `<div>\n              <p>Dear ${data.name}</p>\n              <p>\n                You have been invited to join the ${data.companyName} workspace, we use this\n                system for you to clock-in and clock-out of your shifts as well as to manage\n                your employee profile, it is important you setup your profile now using the\n                link below:\n              </p>\n              <p>\n                <a\n                  href=\"${inviteLink}\"\n                  style=\"\n                    height: 20px;\n                    background-color: #3a2456;\n                    color: white;\n                    border-radius: 6px;\n                    padding: 5px 8px 5px 8px;\n                    text-decoration: none;\n                    font-weight: 600;\n                  \"\n                  >SET PASSWORD</a\n                >\n              </p>\n              <p>\n                <span style=\"font-weight: 600\"\n                  >You will need your PIN number to create your password</span\n                ><span>- your unique PIN number is: </span\n                ><span style=\"font-weight: 600\">${pin}.</span>\n              </p>\n              <p>\n                <span style=\"font-weight: 600\"\n                  >You will also use this PIN to clock in and clock out of shifts so please\n                  keep it safe and on hand.</span\n                >\n              </p>\n              <p>\n                <span\n                  >Once you have created your account using the link above you will be able\n                  to login at</span\n                ><br />\n                <a href=\"https://app.teamixo.com/\" style=\"text-decoration: none\"\n                  >https://app.teamixo.com/</a\n                ><span style=\"font-weight: 600\">\n                  where you can manage your profile and update your PIN to a more memorable\n                  number for yourself.</span\n                >\n              </p>\n              <p>\n                If you have any questions please reply to this e-mail, send an e-mail to\n                [Company Root Email] or contact your manager.\n              </p>\n              <p>Kind Regards,</p>\n              <p>The ${data.companyName} admin team.</p>\n            </div>\n            `,\n          },\n        },\n        Subject: {\n          Charset: \"UTF-8\",\n          Data: `You are invited as member from ${data.companyName}`, // replace with your email subject\n        },\n      },\n      Source: \"Teamixo Support <support@teamixo.com>\", // replace sender@example.com with your \"From\" address\n    };\n\n    await ses.sendEmail(emailParams).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Staff data has been successfully created\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/fetch\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const params = {\n      TableName: \"staff_list\",\n      FilterExpression: \"#organization_id = :organization_id\",\n      ExpressionAttributeNames: {\n        \"#organization_id\": \"organization_id\",\n      },\n      ExpressionAttributeValues: {\n        \":organization_id\": data.organization_id,\n      },\n    };\n    const result = await dynamoDb.scan(params).promise();\n    const response = {\n      statusCode: 200,\n      body: result.Items,\n    };\n\n    return res.status(200).json(response);\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/update\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    let location = \"\";\n\n    if (data.avatar) {\n      var buf = Buffer.from(\n        data.avatar.replace(/^data:image\\/\\w+;base64,/, \"\"),\n        \"base64\"\n      );\n      const type = data.avatar.split(\";\")[0].split(\"/\")[1];\n      const params = {\n        Bucket: process.env.S3_BUCKET_NAME,\n        Key: `Home/Avatars/${data.organization_id}/avatar${timeStamp}.${type}`,\n        Body: buf,\n        ACL: \"public-read\",\n        ContentEncoding: \"base64\",\n        ContentType: `image/${type}`,\n      };\n      try {\n        const uploadData = await s3bucket.upload(params).promise();\n        location = uploadData.Location;\n      } catch (error) {\n        console.log(error);\n        return res.status(200).json({ statusCode: 500, error });\n      }\n    }\n\n    const params = data.avatar\n      ? {\n          TableName: \"staff_list\",\n          Key: {\n            id: data.id,\n          },\n          ExpressionAttributeNames: {\n            \"#name_text\": \"name\",\n            \"#role_text\": \"role\",\n            \"#avatar\": \"avatar\",\n            \"#birth\": \"birth\",\n            \"#pin\": \"pin\",\n            \"#type\": \"type\",\n            \"#state\": \"state\",\n          },\n          ExpressionAttributeValues: {\n            \":name\": data.name,\n            \":role\": data.role,\n            \":type\": data.type,\n            \":avatar\": location,\n            \":birth\": data.birth,\n            \":pin\": data.pin,\n            \":state\": true,\n            \":updateAt\": timeStamp,\n          },\n          UpdateExpression:\n            \"SET #name_text = :name, #role_text = :role, #type = :type, #avatar = :avatar, #birth = :birth, #pin = :pin, #state = :state, updateAt = :updateAt\",\n          ReturnValues: \"ALL_NEW\",\n        }\n      : {\n          TableName: \"staff_list\",\n          Key: {\n            id: data.id,\n          },\n          ExpressionAttributeNames: {\n            \"#name_text\": \"name\",\n            \"#role_text\": \"role\",\n            \"#birth\": \"birth\",\n            \"#pin\": \"pin\",\n            \"#type\": \"type\",\n            \"#state\": \"state\",\n          },\n          ExpressionAttributeValues: {\n            \":name\": data.name,\n            \":role\": data.role,\n            \":type\": data.type,\n            \":birth\": data.birth,\n            \":pin\": data.pin,\n            \":state\": true,\n            \":updateAt\": timeStamp,\n          },\n          UpdateExpression:\n            \"SET #name_text = :name, #role_text = :role, #type = :type, #birth = :birth, #pin = :pin, #state = :state, updateAt = :updateAt\",\n          ReturnValues: \"ALL_NEW\",\n        };\n\n    await dynamoDb.update(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Staff data has been successfully updated\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/upgrade\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n\n    const pin = Math.floor(1000 + Math.random() * 9000);\n    var result = \"\";\n    var characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < 10; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    const addParams = {\n      UserPoolId: process.env.USER_POOL_ID, // replace with your User Pool ID\n      Username: data.email, // replace with the username\n      TemporaryPassword: result, // replace with a temporary password\n      UserAttributes: [\n        {\n          Name: \"email\",\n          Value: data.email, // replace with the user's email\n        },\n        {\n          Name: \"email_verified\",\n          Value: \"true\",\n        },\n        {\n          Name: \"custom:role\",\n          Value: \"member\",\n        },\n        {\n          Name: \"custom:user_id\",\n          Value: data.id,\n        },\n        {\n          Name: \"custom:level\",\n          Value: \"3\",\n        },\n        {\n          Name: \"custom:organization_id\",\n          Value: data.organization_id,\n        },\n      ],\n      MessageAction: \"SUPPRESS\", // suppresses the welcome message\n    };\n    await cognito.adminCreateUser(addParams).promise();\n\n    const params = {\n      TableName: \"staff_list\",\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#role_text\": \"role\",\n        \"#type\": \"type\",\n        \"#state\": \"state\",\n        \"#pin\": \"pin\",\n      },\n      ExpressionAttributeValues: {\n        \":role\": data.role,\n        \":type\": data.type,\n        \":state\": true,\n        \":pin\": pin,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression:\n        \"SET #role_text = :role, #type = :type, #state = :state, #pin = :pin, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(params).promise();\n\n    const inviteLink = \"https://teamixo-server.vercel.app/invite/\" + data.id;\n\n    var emailParams = {\n      Destination: {\n        ToAddresses: [data.email], // replace recipient@example.com with the recipient's email address\n      },\n      Message: {\n        Body: {\n          Html: {\n            Charset: \"UTF-8\",\n            Data: `<div>\n            <p>Dear ${data.name}</p>\n            <p>\n              You have been invited to join the ${data.companyName} workspace, we use this\n              system for you to clock-in and clock-out of your shifts as well as to manage\n              your employee profile, it is important you setup your profile now using the\n              link below:\n            </p>\n            <p>\n              <a\n                href=\"${inviteLink}\"\n                style=\"\n                  height: 20px;\n                  background-color: #3a2456;\n                  color: white;\n                  border-radius: 6px;\n                  padding: 5px 8px 5px 8px;\n                  text-decoration: none;\n                  font-weight: 600;\n                \"\n                >SET PASSWORD</a\n              >\n            </p>\n            <p>\n              <span style=\"font-weight: 600\"\n                >You will need your PIN number to create your password</span\n              ><span>- your unique PIN number is: </span\n              ><span style=\"font-weight: 600\">${pin}.</span>\n            </p>\n            <p>\n              <span style=\"font-weight: 600\"\n                >You will also use this PIN to clock in and clock out of shifts so please\n                keep it safe and on hand.</span\n              >\n            </p>\n            <p>\n              <span\n                >Once you have created your account using the link above you will be able\n                to login at</span\n              ><br />\n              <a href=\"https://app.teamixo.com/\" style=\"text-decoration: none\"\n                >https://app.teamixo.com/</a\n              ><span style=\"font-weight: 600\">\n                where you can manage your profile and update your PIN to a more memorable\n                number for yourself.</span\n              >\n            </p>\n            <p>\n              If you have any questions please reply to this e-mail, send an e-mail to\n              [Company Root Email] or contact your manager.\n            </p>\n            <p>Kind Regards,</p>\n            <p>The ${data.companyName} admin team.</p>\n          </div>\n          `,\n          },\n        },\n        Subject: {\n          Charset: \"UTF-8\",\n          Data: \"You are invited as member from Teamixo\", // replace with your email subject\n        },\n      },\n      Source: \"support@teamixo.com\", // replace sender@example.com with your \"From\" address\n    };\n\n    await ses.sendEmail(emailParams).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Upgrade Successful\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/delete\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Reqeust\" });\n    }\n\n    if (data.state) {\n      const params = {\n        UserPoolId: process.env.USER_POOL_ID,\n        Username: data.email,\n      };\n\n      await cognito.adminDeleteUser(params).promise();\n    }\n\n    const params = {\n      TableName: \"staff_list\",\n      Key: {\n        id: data.id,\n      },\n    };\n\n    await dynamoDb.delete(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Staff data has been successfully deleted\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\n\nimport user from \"./user.route\";\n\nconst router = Router();\n\nrouter.use(\"/\", user);\n\nexport default router;\n","import AWS from \"aws-sdk\";\nimport { Router } from \"express\";\nconst uuid = require(\"uuid\");\n\nconst cognito = new AWS.CognitoIdentityServiceProvider();\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\nconst router = Router();\n\nrouter.post(\"/signup\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, error: \"Bad Request\" });\n    }\n    const { CLIENT_ID } = process.env;\n\n    const userId = uuid.v1();\n\n    const params = {\n      ClientId: CLIENT_ID,\n      Password: data.password,\n      Username: data.email,\n      UserAttributes: [\n        {\n          Name: \"email\",\n          Value: data.email,\n        },\n        {\n          Name: \"custom:user_id\",\n          Value: userId,\n        },\n        {\n          Name: \"custom:role\",\n          Value: \"owner\",\n        },\n        {\n          Name: \"custom:level\",\n          Value: \"1\",\n        },\n      ],\n    };\n    const response = await cognito.signUp(params).promise();\n\n    const Item = {\n      id: response.UserSub,\n      email: data.email,\n      state: \"free\",\n      createAt: timeStamp,\n      updateAt: timeStamp,\n    };\n\n    const organizationParam = {\n      TableName: \"organization\",\n      Item,\n    };\n\n    await dynamoDb.put(organizationParam).promise();\n\n    const pin = Math.floor(1000 + Math.random() * 9000);\n\n    var staffItems = {\n      id: userId,\n      organization_id: response.UserSub,\n      email: data.email,\n      name: data.fname,\n      avatar: process.env.DEFAULT_AVATAR,\n      pin: pin,\n      role: [\"owner\"],\n      level: 1,\n      type: 1,\n      site_id: null,\n      track_id: null,\n      clocked_state: false,\n      state: true,\n      last_start_date: null,\n      createAt: timeStamp,\n      updateAt: timeStamp,\n    };\n\n    const staffParams = {\n      TableName: \"staff_list\",\n      Item: staffItems,\n    };\n\n    await dynamoDb.put(staffParams).promise();\n\n    res.status(200).json({\n      statusCode: 200,\n      message: \"User registration successful\",\n      response: response,\n    });\n  } catch (error) {\n    console.error(\"An error ocurred:\", error);\n    res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/login\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n    const { USER_POOL_ID, CLIENT_ID } = process.env;\n    const params = {\n      AuthFlow: \"ADMIN_NO_SRP_AUTH\",\n      UserPoolId: USER_POOL_ID,\n      ClientId: CLIENT_ID,\n      AuthParameters: {\n        USERNAME: data.email,\n        PASSWORD: data.password,\n      },\n    };\n    const response = await cognito.adminInitiateAuth(params).promise();\n    console.log(response);\n    res.status(200).json({\n      statusCode: 200,\n      message: \"Login succeed\",\n      token: response.AuthenticationResult.IdToken,\n    });\n  } catch (error) {\n    console.error(\"An error ocurred:\", error);\n    res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/confirmEmail\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n    const { CLIENT_ID } = process.env;\n    const params = {\n      ClientId: CLIENT_ID,\n      Username: data.email,\n      ConfirmationCode: data.confirmCode,\n    };\n    const response = await cognito.confirmSignUp(params).promise();\n\n    res.status(200).json({\n      statusCode: 200,\n      message: `Confirm succeffsul about ${data.email}`,\n      response: response,\n    });\n  } catch (error) {\n    console.error(\"An error occured:\", error);\n    res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/forgot\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({ statusCode: 400, message: \"Bad Request\" });\n    }\n    const { CLIENT_ID } = process.env;\n\n    const params = {\n      ClientId: CLIENT_ID, // replace with your App client id\n      Username: data.useremail, // replace with the username\n    };\n\n    const response = await cognito.forgotPassword(params).promise();\n    return res.status(200).json({ statusCode: 200, response });\n  } catch (error) {\n    console.log(\"An error occured:\", error);\n    res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/setpassword\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({\n        statusCode: 400,\n        message: \"Bad Request\",\n      });\n    }\n\n    var verifyParams = {\n      UserPoolId: process.env.USER_POOL_ID, // replace with your User Pool ID\n      Username: data.email, // replace with the user's username\n      Password: data.password, // replace with the user's real password\n      Permanent: true,\n    };\n\n    const response = await cognito.adminSetUserPassword(verifyParams).promise();\n\n    return res.status(200).json({ statusCode: 200, response });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/confirmforgot\", async (req, res) => {\n  try {\n    const data = req.body;\n    if (!data) {\n      return res.status(200).json({\n        statusCode: 400,\n        message: \"Bad Request\",\n      });\n    }\n\n    const { CLIENT_ID } = process.env;\n\n    const params = {\n      ClientId: CLIENT_ID, // replace with your App client id\n      Username: data.username, // replace with the username\n      ConfirmationCode: data.confirmationCode, // replace with the confirmation code\n      Password: data.newPassword, // replace with the new password\n    };\n\n    const response = await cognito.confirmForgotPassword(params).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      response,\n      message: \"Password has been changed successfully.\",\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nrouter.post(\"/changeEmail\", async (req, res) => {\n  try {\n    const timeStamp = new Date().getTime();\n    const data = req.body;\n\n    if (!data) {\n      return res.status(200).json({\n        statusCode: 400,\n        message: \"Bad Request\",\n      });\n    }\n\n    const { USER_POOL_ID } = process.env;\n\n    const params = {\n      UserPoolId: USER_POOL_ID, // replace with your User Pool ID\n      Username: data.oldEmail, // replace with the old email\n      UserAttributes: [\n        {\n          Name: \"email\",\n          Value: data.newEmail, // replace with the new email\n        },\n        {\n          Name: \"email_verified\",\n          Value: \"true\",\n        },\n      ],\n    };\n\n    const response = await cognito.adminUpdateUserAttributes(params).promise();\n\n    const staffParams = {\n      TableName: \"staff_list\",\n      Key: {\n        id: data.id,\n      },\n      ExpressionAttributeNames: {\n        \"#email\": \"email\",\n      },\n      ExpressionAttributeValues: {\n        \":email\": data.newEmail,\n        \":updateAt\": timeStamp,\n      },\n      UpdateExpression: \"SET #email = :email, updateAt = :updateAt\",\n      ReturnValues: \"ALL_NEW\",\n    };\n\n    await dynamoDb.update(staffParams).promise();\n\n    return res.status(200).json({\n      statusCode: 200,\n      message: \"Email has been successfully updated\",\n      data: response,\n    });\n  } catch (error) {\n    return res.status(200).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\n\nconst router = Router();\n\nrouter.get(\"/\", async (req, res) => {\n  try {\n    res.status(200).json([]);\n  } catch (error) {\n    console.error(\"An error ocurred:\", error);\n    res.status(200).json(error);\n  }\n});\n\nrouter.get(\"/:id\", async (req, res) => {\n  try {\n    res.status(200).json({});\n  } catch (error) {\n    console.error(\"An error ocurred:\", error);\n    res.status(500).json(error);\n  }\n});\n\nrouter.post(\"/\", async (req, res) => {\n  try {\n    res.status(201).json({});\n  } catch (error) {\n    console.error(\"An error occurred:\", error);\n    res.status(500).json(error);\n  }\n});\n\nrouter.put(\"/:id\", async (req, res) => {\n  try {\n    res.status(200).json({});\n  } catch (error) {\n    console.error(\"An error occurred:\", error);\n    res.status(500).json(error);\n  }\n});\n\nrouter.delete(\"/:id\", async (req, res) => {\n  try {\n    res.status(200).json({});\n  } catch (error) {\n    console.error(\"An error occurred:\", error);\n    res.status(500).json(error);\n  }\n});\n\nexport default router;\n","import { Router } from \"express\";\n\nimport books from \"./books.route\";\n\nconst router = Router();\n\nrouter.use(\"/books\", books);\n\nexport default router;\n","module.exports = require(\"aws-sdk\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"moment\");","module.exports = require(\"serverless-http\");","module.exports = require(\"uuid\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import express from \"express\";\nimport serverless from \"serverless-http\";\nimport cors from \"cors\";\nimport bodyParser from \"body-parser\";\n\nimport routes from \"./routes\";\n\nconst app = express();\n\napp.use(cors());\n\napp.use(bodyParser.json({ limit: \"10mb\" }));\napp.use(bodyParser.urlencoded({ limit: \"10mb\", extended: true }));\n\napp.use(express.json());\n\napp.use(\"/api\", routes);\n\napp.use((req, res, next) => {\n  res.status(404).send();\n});\n\napp.use((err, req, res, next) => {\n  res.status(err.status || 500).send();\n});\n\nexport const handler = serverless(app);\n"],"names":["AWS","Router","uuid","require","cognito","CognitoIdentityServiceProvider","dynamoDb","DynamoDB","DocumentClient","s3bucket","S3","router","get","req","res","companyParams","TableName","companyData","scan","promise","orgParams","orgData","status","json","statusCode","data","error","post","body","message","orgParam","Key","id","orgId","delete","companyParam","companyId","params","FilterExpression","ExpressionAttributeNames","ExpressionAttributeValues","scanResults","items","Items","forEach","item","push","ExclusiveStartKey","LastEvaluatedKey","table_name","deleteTable","deleteParams","userParam","UserPoolId","process","env","USER_POOL_ID","Username","email","adminDeleteUser","urlParts","URL","docFile","pathname","split","key","slice","join","replaceAll","Bucket","S3_BUCKET_NAME","deleteObject","admin","use","moment","roundToNearestFiveMinutes","date","round","ms","roundedDate","Date","Math","getTime","site","Item","organization_id","company","response","result","timeStamp","update_state","siteParams","UpdateExpression","ReturnValues","update","uid","v1","dateParams","tableName","staff_id","staff","start_date","format","end_date","total_time","name","createdAt","updateAt","put","stsatusCode","Attributes","differenceInMs","last_start_date","dateParam","track_id","avatar","DEFAULT_AVATAR","site_id","type","level","clocked_state","state","createAt","client","organizationId","description","logo","date_format","timeZone","location","buf","Buffer","from","replace","Body","ACL","ContentEncoding","ContentType","uploadData","upload","Location","console","log","rdname","dateFormat","organizationParams","messages","contact","ddb","apiVersion","KeySchema","AttributeName","KeyType","AttributeDefinitions","AttributeType","BillingMode","createTable","db","file","base64Data","decodedFile","docName","docType","docDate","expireDate","assignType","assignValue","documentParams","resultDocList","filter","role","includes","userId","sietId","document","user","setting","report","remote","profile","gender","birth","s3params","utils","responseData","staffParams","pin","staffHistoryList","edit_state","siteId","subState","oldParams","old_staff_id","getObject","toString","site_report","staff_report","showDay","lat","lng","ses","SES","floor","random","characters","charactersLength","length","i","charAt","TemporaryPassword","UserAttributes","Name","Value","MessageAction","adminCreateUser","inviteLink","emailParams","Destination","ToAddresses","Message","Html","Charset","Data","companyName","Subject","Source","sendEmail","addParams","CLIENT_ID","ClientId","Password","password","signUp","UserSub","organizationParam","staffItems","fname","AuthFlow","AuthParameters","USERNAME","PASSWORD","adminInitiateAuth","token","AuthenticationResult","IdToken","ConfirmationCode","confirmCode","confirmSignUp","useremail","forgotPassword","verifyParams","Permanent","adminSetUserPassword","username","confirmationCode","newPassword","confirmForgotPassword","oldEmail","newEmail","adminUpdateUserAttributes","books","express","serverless","cors","bodyParser","routes","app","limit","urlencoded","extended","next","send","err","handler"],"sourceRoot":""}